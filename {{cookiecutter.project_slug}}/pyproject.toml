[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
# Use identifier from https://spdx.org/licenses/
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_slug }}"
repository = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_slug }}"
documentation = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_slug }}/blob/master/README.md"
classifiers = [
    # https://pypi.org/classifiers/
    {%- if cookiecutter.command_line_interface != "no cli" %}
    "Environment :: Console",
    {%- endif %}
    "Development Status :: 1 - Planning",
]
[tool.poetry.urls]
# If you publish you package on PyPI, these will appear in the Project Links section.
"Bug Tracker" = "https://github.com/{{ cookiecutter.github_name }}/{{ cookiecutter.project_slug }}/issues"

[tool.poetry.scripts]
{%- if cookiecutter.command_line_interface != "no cli" %}
{{ cookiecutter.project_slug }} = "{{ cookiecutter.module_name }}.cli:cli"
{%- endif %}

[tool.poetry.dependencies]
python = "^3.9.0"
{%- if cookiecutter.command_line_interface == "click" %}
click = "^8.0.1"
{%- endif %}
{%- if cookiecutter.use_jupyterlab == "y" %}
jupyterlab = "^3.0.0"
pandas = "^1.2.0"
jupyterlab_git = "^0.23.3"
jupyterlab_widgets = "^1.0.0"
{%- endif %}

[tool.poetry.dev-dependencies]
bandit = "^1.6.2"
black = "^22.0"
bump2version = "^1.0.1"
isort= "^5.0.8"
flake8 = "^5.0.4"
jedi-language-server = "^0.22.0"
mypy = "^0.971"
pylint = "^2.6.0"
pytest = "^7.0.1"
pytest-cov = "^3.0"
pytest-xdist = "^2.5.0"
vulture = "^2.3"
{%- if cookiecutter.command_line_interface != "no cli" %}
pyinstaller = "^4.1"
{%- endif %}
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
target-version = ['py39']

[tool.mypy]
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須
disallow_untyped_defs = true
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true

[tool.pytest.ini_options]
# Example
filterwarnings = [
    "ignore::DeprecationWarning:moto.*:",
    "ignore::DeprecationWarning:boto.*:",
]
