[tool.poetry]
name = "cookiecutter-python-cli-poetry"
version = "0.0.1"
description = """
Cookiecutter template for a python project with poetry and pytest
and other goodies"""
authors = ["Madoka Sato <msato@altus5.com>"]
# Use identifier from https://spdx.org/licenses/
license = "MIT"
readme = "README.md"
homepage = "https://github.com/altus5/cookiecutter-python-cli-poetry"
repository = "https://github.com/altus5/cookiecutter-python-cli-poetry"
documentation = "https://github.com/altus5/cookiecutter-python-cli-poetry/blob/master/README.md"
classifiers = [
    # https://pypi.org/classifiers/
    "Environment :: Console",
    "Development Status :: 1 - Planning",
]
[tool.poetry.urls]
# If you publish you package on PyPI, these will appear in the Project Links section.
"Bug Tracker" = "https://github.com/altus5/cookiecutter-python-cli-poetry/issues"

[tool.poetry.dependencies]
python = "^3.9.0"
cookiecutter = "^2.1.1"
pytest-cookies = "^0.6.1"

[tool.poetry.dev-dependencies]
pytest = "^5.0.0"
pytest-cov = "^2.10.1"
black = "^22.0.0"
bandit = "^1.6.2"
pylint = "^2.6.0"
bump2version = "^1.0.1"
vulture = "^2.3"
jedi-language-server = "^0.22.0"
mypy = "^0.971"
reorder-python-imports = "^2.3.6"
pyinstaller = "^4.1"
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
target-version = ['py39']

[tool.mypy]
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須
disallow_untyped_defs = true
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true

[tool.pytest.ini_options]
# Example
filterwarnings = [
    "ignore::DeprecationWarning:moto.*:",
    "ignore::DeprecationWarning:boto.*:",
]
